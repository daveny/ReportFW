@{
    ViewBag.Title = ViewBag.ReportName ?? "Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-9">
            <h1>@ViewBag.ReportName</h1>
            @if (ViewBag.FilterValues != null && ViewBag.FilterValues.Count > 0)
            {
                <div class="active-filters">
                    <small class="text-muted">
                        Active filters:
                        @foreach (var filter in ViewBag.FilterValues)
                        {
                            if (!string.IsNullOrEmpty(filter.Value))
                            {
                                <span class="badge bg-light text-dark">@filter.Key: @filter.Value</span>
                            }
                        }
                    </small>
                </div>
            }
        </div>
        <div class="col-md-3 text-end">
            <button id="refreshReport" class="btn btn-primary">
                <i class="fa fa-refresh"></i> Refresh
            </button>
            <button id="exportPdf" class="btn btn-secondary ms-2">
                <i class="fa fa-file-pdf-o"></i> Export PDF
            </button>
        </div>
    </div>

    <div class="report-container">
        @Html.Raw(ViewBag.ReportContent)
    </div>
</div>

<!-- Add styles for filters and placeholders -->
<style>
    /* General filter styles */
    .filter-panel {
        margin-bottom: 1.5rem;
        border: 1px solid #dee2e6;
        transition: all 0.3s ease;
    }

    .filter-panel .card-header {
        padding: 0.75rem 1.25rem;
        cursor: pointer;
    }

    .filter-count {
        font-size: 0.8rem;
        vertical-align: middle;
        margin-left: 0.5rem;
    }

    .filter-component {
        margin-bottom: 15px;
    }

    .filter-component label {
        display: block;
        margin-bottom: 5px;
        font-weight: 500;
        color: #495057;
    }

    .filter-button-group {
        width: 100%;
        display: flex;
    }

    .filter-button {
        flex: 1;
    }

    .active-filters .badge {
        margin-right: 0.3rem;
        padding: 0.4rem 0.6rem;
        border: 1px solid #dee2e6;
    }

    /* Chart styles */
    .chart-placeholder {
        min-height: 200px;
        border: 1px dashed #ccc;
        margin: 15px 0;
        padding: 15px;
        border-radius: 5px;
        background-color: #f9f9f9;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        border-radius: 0.25rem;
        overflow: hidden;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #eee;
        padding: 0.75rem 1.25rem;
    }

    .card-header h3 {
        margin: 0;
        font-size: 1.25rem;
    }

    .chart-loading {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 200px;
    }

    .chart-loading .spinner-border {
        margin-right: 10px;
    }

    /* Form elements in filter panel */
    .filter-panel select,
    .filter-panel input,
    .filter-panel .input-group {
        width: 100%;
    }

    /* Better responsive design */
    @@media (max-width: 768px) {
        .filter-panel .btn {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
</style>

<!-- JavaScript for filter functionality -->
<script src="~/Scripts/filter-script.js"></script>
<script src="~/Scripts/filter-form.js"></script>

<!-- JavaScript for form submission handling -->
<script>
    $(document).ready(function () {
        // Fix for the form submission
        $('form#reportForm').on('submit', function(e) {
            e.preventDefault();

            // Collect all filter values
            var filterValues = {};

            // Extract values from all inputs
            $(this).find('input, select').each(function() {
                var name = $(this).attr('name');
                var value = $(this).val();
                if (name) {
                    filterValues[name] = value || '';
                }
            });

            // Extract values from active buttons in button groups
            $('.filter-button-group').each(function() {
                var activeBtn = $(this).find('.btn-primary');
                if (activeBtn.length) {
                    var name = activeBtn.data('param-name');
                    var value = activeBtn.data('value');
                    if (name) {
                        filterValues[name] = value || '';
                    }
                }
            });

            // Build URL with current template name and filter values
            var templateName = '@ViewBag.ReportName';
            var url = '@Url.Action("RenderReport", "Report")/' + templateName;
            var queryParams = [];

            for (var key in filterValues) {
                if (filterValues[key] !== '') {
                    queryParams.push(key + '=' + encodeURIComponent(filterValues[key]));
                }
            }

            if (queryParams.length > 0) {
                url += '?' + queryParams.join('&');
            }

            console.log('Redirecting to:', url);
            window.location.href = url;
        });

        // Refresh button handling
        $('#refreshReport').click(function (e) {
            e.preventDefault();
            window.location.reload();
        });

        // Export PDF button (placeholder - would need proper implementation)
        $('#exportPdf').click(function () {
            alert('PDF export functionality would go here');
            // Actual implementation would use a library like jsPDF or call a server endpoint
        });

        // Toggle filter panel
        $('.filter-panel .card-header button').on('click', function () {
            $('#filterCollapse').collapse('toggle');
        });
    });
</script>